{"version":3,"sources":["app.ts","environment.ts","main.ts","models/account.ts","models/auth-info.ts","models/company.ts","models/person.ts","models/priority.ts","models/project.ts","models/tag.ts","models/task.ts","models/twfile.ts","resources/index.ts","twpm/twpm-client-factory.ts","twpm/auth-state.ts","twpm/twpm-auth.ts","twpm/twpm-svc.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  message = 'Hello World!';\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Account {\r\n    requireHttps: boolean;\r\n    timeTrackingEnabled: boolean;\r\n    name: string;\r\n    dateSignedUp: Date;\r\n    companyname: string;\r\n    sslEnabled: boolean;\r\n    createdAt: Date;\r\n    cacheUUID: string;\r\n    accountHolderID: number;\r\n    logo: string;\r\n    userID: number;\r\n    accountURL: string;\r\n    emailNotificationEnabled: boolean;\r\n    companyID: number;\r\n    lang: string;\r\n    code: string;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return \"account.json\";\r\n    }\r\n\r\n    static parse (pRawData: any): Account {\r\n        let data = pRawData.account || pRawData;\r\n        let obj = new Account();\r\n        obj.requireHttps = data[\"requirehttps\"] === true;\r\n        obj.timeTrackingEnabled = data[\"time-tracking-enabled\"] === true;\r\n        obj.name = data[\"name\"];\r\n        obj.dateSignedUp = data[\"datesignedup\"]; //TODO: moment\r\n        obj.companyname = data[\"companyname\"];\r\n        obj.sslEnabled = data[\"ssl-enabled\"] === true;\r\n        obj.createdAt = data[\"created-at\"]; //TODO: moment\r\n        obj.cacheUUID = data[\"cacheUUID\"];\r\n        obj.accountHolderID = parseInt(data[\"account-holder-id\"]);\r\n        obj.logo = data[\"logo\"];\r\n        obj.userID = parseInt(data[\"id\"]);\r\n        obj.accountURL = data[\"URL\"];\r\n        obj.emailNotificationEnabled = data[\"email-notification-enabled\"] === true;\r\n        obj.companyID = parseInt(data[\"companyid\"]);\r\n        obj.lang = data[\"lang\"];\r\n        obj.code = data[\"code\"];\r\n        return obj;\r\n    }\r\n\r\n    /*\r\n     * {\r\n    \"requirehttps\": false,\r\n    \"time-tracking-enabled\": true,\r\n    \"name\": \"Teamwork Account Name\",\r\n    \"datesignedup\": \"2013-03-05T00:00:00Z\",\r\n    \"companyname\": \"Owner Company Name\",\r\n    \"ssl-enabled\": true,\r\n    \"created-at\": \"2011-08-22T12:57:00Z\",\r\n    \"cacheUUID\": \"C14A34C3-D5AE-86A3-B9A88A5377D2CD79\",\r\n    \"account-holder-id\": \"1\",\r\n    \"logo\": \"http://www.someteamworkurl.com/images/349C6BDFA9EA4F814B6822C2F8C13A61%2Ejpg\",\r\n    \"id\": \"1\",\r\n    \"URL\": \"http://sampleaccount.teamwork.com/\",\r\n    \"email-notification-enabled\": true,\r\n    \"companyid\": \"1\",\r\n    \"lang\": \"EN\",\r\n    \"code\": \"teamworksitecode\"\r\n  }\r\n     * \r\n     */\r\n\r\n\r\n}","\r\nexport class AuthUserInfo {\r\n    installURL: string;\r\n    userID: number;\r\n    accountID: number;\r\n    dateFormat: string;\r\n    companyName: string;\r\n    companyID: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatarUrl: string;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return \"authenticate.json\";\r\n    }\r\n\r\n    static parse (pRawData: any): AuthUserInfo {\r\n        let data = pRawData.account || pRawData;\r\n        let obj = new AuthUserInfo();\r\n        obj.installURL = data[\"URL\"];\r\n        obj.companyID = parseInt(data[\"companyid\"]);\r\n        obj.companyName = data[\"companyname\"];\r\n        obj.dateFormat = data[\"dateFormat\"];\r\n        obj.accountID = parseInt(data[\"id\"]);\r\n        obj.userID = parseInt(data[\"userId\"]);\r\n        obj.firstName = data.firstname;\r\n        obj.lastName = data.lastname;\r\n        obj.avatarUrl = data[\"avatar-url\"];\r\n        return obj;\r\n    }\r\n}\r\n\r\n\r\n    /*\r\n     * \r\n     * STATUS: \"OK\"\r\naccount: {\r\nURL: \"https://mycompany.teamwork.com/\"\r\navatar-url: \"https://tw-webserver1.teamworkpm.net/sites/mycompany/images/users/c07e4e246a3b4817f706b440f8882dd84%2Ejpg\"\r\ncanManagePeople: \"1\"\r\ncanaddprojects: \"1\"\r\nchatEnabled: true\r\ncode: \"myabc\"\r\ncompanyid: \"65656\"\r\ncompanyname: \"MMG, Inc.\"\r\ndateFormat: \"mm/dd/yyyy\"\r\ndateSeperator: \"/\"\r\ndeskEnabled: true\r\nfirstname: \"Diego\"\r\nid: \"99999\"\r\nlang: \"EN\"\r\nlastname: \"Bustamante\"\r\nlikesEnabled: true\r\nlogo: \"https://tw-webserver2.teamworkpm.net/sites/mycompany/images/5400f7%2D0%5Fmmg%5Flogo%2Ejpg\"\r\nname: \"MMG, Inc.\"\r\nplan-id: \"1\"\r\nprojectsEnabled: true\r\nrequirehttps: true\r\nssl-enabled: true\r\nstartonsundays: false\r\ntagsEnabled: true\r\ntagsLockedToAdmins: true\r\ntimeFormat: \"h:mmtt\"\r\nuserId: \"78748\"\r\nuserIsAdmin: true\r\nuserIsMemberOfOwnerCompany: true\r\n}\r\n     */","export class Company {\r\n    companyID: number;\r\n    name: string;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return `companies/${this.companyID}.json`;\r\n    }\r\n\r\n    static parse (pRawData: any): Company {\r\n        let data = pRawData.company || pRawData;\r\n        let obj = new Company();\r\n        obj.companyID = parseInt(data.id);\r\n        obj.name = data.name;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"company\": {\r\n        \"state\": \"State\",\r\n        \"name\": \"Demo 2 Company\",\r\n        \"address_two\": \"Address Line 2\",\r\n        \"email_one\": \"\",\r\n        \"country\": \"Ireland\",\r\n        \"isowner\": \"0\",\r\n        \"email_three\": \"\",\r\n        \"contacts\": \"0\",\r\n        \"industry\": \"\",\r\n        \"logo-URL\": \"\",\r\n        \"address_one\": \"Address Line 1\",\r\n        \"website\": \"http://demo2company.com\",\r\n        \"cid\": \"\",\r\n        \"email_two\": \"\",\r\n        \"accounts\": \"0\",\r\n        \"phone\": \"\",\r\n        \"company_name_url\": \"999-demo-2-company\",\r\n        \"countrycode\": \"IE\",\r\n        \"can_see_private\": false,\r\n        \"zip\": \"\",\r\n        \"id\": \"999\",\r\n        \"city\": \"City\",\r\n        \"fax\": \"\"\r\n    },\r\n    \"STATUS\": \"OK\"\r\n}\r\n */","export class Person {\r\n    personID: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    avatarUrl: string;\r\n    title: string;\r\n    companyID: number;\r\n    isAdmin: boolean;\r\n    lastLogin: any;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return `people/${this.personID}.json`;\r\n    }\r\n\r\n    static parse (pRawData: any): Person {\r\n        let data = pRawData.person || pRawData;\r\n        let obj = new Person();\r\n        obj.personID = parseInt(data[\"id\"]);\r\n        obj.firstName = data[\"first-name\"];\r\n        obj.lastName = data[\"last-name\"];\r\n        obj.email = data[\"email-address\"];\r\n        obj.title = data[\"title\"];\r\n        obj.avatarUrl = data[\"avatar-url\"];\r\n        obj.companyID = parseInt(data[\"company-id\"]);\r\n        obj.isAdmin = data.administrator === true;\r\n        obj.lastLogin = data[\"last-login\"]; //TODO: moment\r\n        return obj;\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"person\": {\r\n        \"administrator\": true,\r\n        \"pid\": \"\",\r\n        \"site-owner\": false,\r\n        \"twitter\": \"\",\r\n        \"phone-number-home\": \"\",\r\n        \"last-name\": \"User\",\r\n        \"email-address\": \"d@demo1company.com\",\r\n        \"profile\": \"\",\r\n        \"userUUID\": \"\",\r\n        \"private-notes\": \"\",\r\n        \"user-name\": \"demo\",\r\n        \"id\": \"999\",\r\n        \"company-name\": \"Demo 1 Company\",\r\n        \"last-changed-on\": \"2014-04-01T11:13:12Z\",\r\n        \"phone-number-office\": \"\",\r\n        \"deleted\": false,\r\n        \"notes\": \"\",\r\n        \"phone-number-mobile\": \"\",\r\n        \"first-name\": \"Demo\",\r\n        \"user-type\": \"account\",\r\n        \"permissions\": {\r\n            \"can-manage-people\": true,\r\n            \"can-add-projects\": true\r\n        },\r\n        \"im-service\": \"\",\r\n        \"address\": {\r\n            \"zipcode\": \"\",\r\n            \"countrycode\": \"\",\r\n            \"state\": \"\",\r\n            \"line1\": \"\",\r\n            \"country\": \"\",\r\n            \"line2\": \"\",\r\n            \"city\": \"\"\r\n        },\r\n        \"im-handle\": \"\",\r\n        \"created-at\": \"2013-10-21T18:01:39Z\",\r\n        \"phone-number-office-ext\": \"\",\r\n        \"company-id\": \"999\",\r\n        \"has-access-to-new-projects\": false,\r\n        \"phone-number-fax\": \"\",\r\n        \"avatar-url\": \"http://demo1company.teamwork.com/images/avatar.jpg\",\r\n        \"in-owner-company\": \"1\",\r\n        \"last-login\": \"2014-04-01T11:32:12Z\",\r\n        \"email-alt-1\": \"\",\r\n        \"email-alt-2\": \"\",\r\n        \"email-alt-3\": \"\",\r\n        \"companyId\": \"999\",\r\n        \"title\": \"\"\r\n    },\r\n    \"STATUS\": \"OK\"\r\n}\r\n */","\r\nexport enum Priority {\r\n    Low,\r\n    Medium,\r\n    High\r\n}","import {Company} from \"./company\";\r\n\r\nexport class Project {\r\n    projectID: number;\r\n    name: string;\r\n    lastModified: string;\r\n    dateCreated: string;\r\n    endDate: any;\r\n    company: Company;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return `projects/${this.projectID}.json`;\r\n    }\r\n\r\n    static parse (pRawData: any): Project {\r\n        let data = pRawData.project || pRawData;\r\n        let obj = new Project();\r\n        obj.projectID = parseInt(data.id);\r\n        obj.name = data.name;\r\n        obj.lastModified = data[\"last-changed-on\"];\r\n        obj.dateCreated = data[\"created-on\"];\r\n        obj.endDate = data.endDate;\r\n        if (data.company) {\r\n            obj.company = Company.parse(data.company);\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"STATUS\": \"OK\",\r\n    \"projects\": [\r\n        {\r\n            \"company\": {\r\n                \"name\": \"Demo 1 Company\",\r\n                \"is-owner\": \"1\",\r\n                \"id\": \"999\"\r\n            },\r\n            \"starred\": true,\r\n            \"name\": \"demo\",\r\n            \"show-announcement\": false,\r\n            \"announcement\": \"\",\r\n            \"description\": \"A demo project\",\r\n            \"status\": \"active\",\r\n            \"isProjectAdmin\": true,\r\n            \"created-on\": \"2014-03-28T15:24:22Z\",\r\n            \"category\": {\r\n                \"name\": \"\",\r\n                \"id\": \"\"\r\n            },\r\n            \"start-page\": \"projectoverview\",\r\n            \"startDate\": \"\",\r\n            \"logo\": \"http://demo1company.teamwork.com/images/logo.jpg\",\r\n            \"notifyeveryone\": false,\r\n            \"id\": \"999\",\r\n            \"last-changed-on\": \"2014-04-01T14:29:32Z\",\r\n            \"endDate\": \"\",\r\n            \"harvest-timers-enabled\":\"true\"\r\n        }\r\n    ]\r\n}\r\n */","\r\nexport class Tag {\r\n    tagID: number;\r\n    color: string;\r\n    name: string;\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    get endpointURI (): string {\r\n        return `tags/${this.tagID}`;\r\n    }\r\n\r\n    static parse (pRawData: any): Tag {\r\n        let data = pRawData.tag || pRawData;\r\n        let obj = new Tag();\r\n        obj.tagID = parseInt(data[\"id\"]);\r\n        obj.name = data[\"name\"];\r\n        obj.color = data[\"color\"]; //e.g. \"#b1da34\"\r\n        return obj;\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"tag\": {\r\n        \"id\": \"999\",\r\n        \"name\": \"Website\",\r\n        \"color\": \"#ff0000\"\r\n    },\r\n    \"STATUS\": \"OK\"\r\n}\r\n */","import {Priority} from \"./priority\";\r\nimport {Tag} from \"./tag\";\r\n\r\nexport class Task {\r\n\r\n    canComplete: boolean;\r\n    assigneeSummary: string;\r\n    assigneeName: string;\r\n    assigneeID: string;\r\n    attachments: Array<any>;\r\n    projectName: string;\r\n    creatorID: number;\r\n    creatorAvatarURL: string;\r\n    companyID: number;\r\n    parentTaskID: number;\r\n    canViewEstimatedTime: boolean;\r\n    progress: number;\r\n    priority: Priority;\r\n    description: string;\r\n    estimateMinutes: number;\r\n    attachmentCount: number;\r\n    isCompleted: boolean;\r\n    hasDependencies: number;\r\n    dueDate: string;\r\n    lastChangedOn: any;\r\n    creatorFirstname: string;\r\n    taskID: number;\r\n    companyName: string;\r\n    hasPredecessors: number;\r\n    title: string;\r\n    canEdit: boolean;\r\n    createdOn: any;\r\n    predecessors: Array<any>;\r\n    taskListID: number;\r\n    status: string;\r\n    privateVal: number;\r\n    commentsCount: number;\r\n    ordinal: number;\r\n    dueDateBase: string;\r\n    hasUnreadComments: boolean;\r\n    taskListName: string;\r\n    hasReminders: boolean;\r\n    creatorLastName: string;\r\n    projectID: number;\r\n    startDate: string;\r\n    tags: Array<Tag>;\r\n\r\n    constructor (data: any) {\r\n        this.canComplete = data[\"canComplete\"] === true;\r\n        this.projectID = parseInt(data[\"project-id\"]);\r\n        this.creatorLastName = data[\"creator-lastname\"];\r\n        this.hasReminders = data[\"has-reminders\"] === true;\r\n        this.taskListName = data[\"todo-list-name\"];\r\n        this.hasUnreadComments = data[\"has-unread-comments\"] === true;\r\n        this.dueDateBase = data[\"due-date-base\"];\r\n        this.ordinal = parseInt(data[\"order\"]);\r\n        this.commentsCount = data[\"comments-count\"];\r\n        this.privateVal = data[\"private\"];\r\n        this.status = data[\"status\"];\r\n        this.taskListID = parseInt(data[\"todo-list-id\"]);\r\n        this.predecessors = data[\"predecessors\"];\r\n        this.createdOn = data[\"created-on\"]; //TODO: moment\r\n        this.canEdit = data[\"canEdit\"] === true;\r\n        this.title = data[\"content\"];\r\n        this.hasPredecessors = data[\"has-predecessors\"];\r\n        this.companyName = data[\"company-name\"];\r\n        this.taskID = parseInt(data[\"id\"]);\r\n        this.creatorFirstname = data[\"creator-firstname\"];\r\n        this.lastChangedOn = data[\"last-changed-on\"]; //TODO: moment\r\n        this.dueDate = data[\"due-date\"]; //e.g. \"20140405\"\r\n        this.hasDependencies = data[\"has-dependencies\"];\r\n        this.isCompleted = data[\"completed\"] === true;\r\n        this.attachmentCount = data[\"attachments-count\"];\r\n        this.estimateMinutes = data[\"estimated-minutes\"];\r\n        this.description = data[\"description\"];\r\n        this.priority = data[\"priority\"];\r\n        this.progress = data[\"progress\"];\r\n        this.canViewEstimatedTime = data[\"viewEstimatedTime\"];\r\n        this.parentTaskID = parseInt(data[\"parentTaskId\"]);\r\n        this.companyID = parseInt(data[\"company-id\"]);\r\n        this.creatorAvatarURL = data[\"creator-avatar-url\"];\r\n        this.creatorID = parseInt(data[\"creator-id\"]);\r\n        this.projectName = data[\"project-name\"];\r\n        this.attachments = data[\"attachments\"];\r\n        this.assigneeID = data[\"responsible-party-ids\"]; //e.g. \"1,2\",\r\n        this.assigneeName = data[\"responsible-party-names\"]; //e.g. \"Daniel M.|Peter C.\",\r\n        this.assigneeSummary = data[\"responsible-party-summary\"]; //e.g. \"You & Peter C.\"\r\n        this.startDate = data[\"start-date\"]; //e.g. \"20140402\"\r\n        if (data[\"tags\"])\r\n            this.tags = data[\"tags\"].map(tagData => Tag.parse(tagData));\r\n        else\r\n            this.tags = [];\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"todo-item\": {\r\n        \"canComplete\": true,\r\n        \"project-id\": \"23097\",\r\n        \"creator-lastname\": \"User\",\r\n        \"has-reminders\": false,\r\n        \"todo-list-name\": \"Todos\",\r\n        \"has-unread-comments\": false,\r\n        \"due-date-base\": \"20140405\",\r\n        \"order\": \"1002\",\r\n        \"comments-count\": \"2\",\r\n        \"private\": \"0\",\r\n        \"status\": \"reopened\",\r\n        \"todo-list-id\": \"58759\",\r\n        \"predecessors\": [],\r\n        \"created-on\": \"2014-04-01T15:52:15Z\",\r\n        \"canEdit\": true,\r\n        \"content\": \"Write documentation\",\r\n        \"has-predecessors\": \"0\",\r\n        \"company-name\": \"Demo 1 Company\",\r\n        \"id\": \"999\",\r\n        \"creator-firstname\": \"Demo\",\r\n        \"last-changed-on\": \"2014-04-02T11:05:19Z\",\r\n        \"due-date\": \"20140405\",\r\n        \"has-dependencies\": \"0\",\r\n        \"completed\": false,\r\n        \"position\": \"1002\",\r\n        \"attachments-count\": \"0\",\r\n        \"estimated-minutes\": \"0\",\r\n        \"description\": \"\",\r\n        \"priority\": \"\",\r\n        \"progress\": \"0\",\r\n        \"harvest-enabled\": false,\r\n        \"viewEstimatedTime\": true,\r\n        \"parentTaskId\": \"\",\r\n        \"company-id\": \"2\",\r\n        \"tasklist-lockdownId\": \"\",\r\n        \"creator-avatar-url\": \"http://sitename.teamwork.com/images/avatar.jpg\",\r\n        \"canLogTime\": true,\r\n        \"creator-id\": \"28726\",\r\n        \"project-name\": \"demo\",\r\n        \"attachments\": [],\r\n        \"responsible-party-ids\": \"1,2\",\r\n        \"responsible-party-names\": \"Daniel M.|Peter C.\",\r\n        \"responsible-party-summary\": \"You & Peter C.\",\r\n        \"start-date\": \"20140402\",\r\n        \"tasklist-private\": \"0\",\r\n        \"timeIsLogged\": \"0\",\r\n        \"lockdownId\": \"\",\r\n        \"tags\": [\r\n            {\r\n                \"id\": 5,\r\n                \"name\": \"api\",\r\n                \"color\": \"#b1da34\"\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": \"documentation\",\r\n                \"color\": \"#A9C3F9\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n */","export class TWFile {\r\n    fileID: number;\r\n    fileName: string;\r\n    projectID: number;\r\n    categoryName: string;\r\n    downloadURL: string;\r\n    teamworkFileURL: string;\r\n\r\n    get endpointURI (): string {\r\n        return `files/${this.fileID}`;\r\n    }\r\n\r\n    static parse (pRawData: any, pBaseURL?: string): TWFile {\r\n        let data = pRawData.file || pRawData;\r\n        let obj = new TWFile();\r\n        obj.fileID = parseInt(data[\"id\"]);\r\n        obj.fileName = data[\"name\"];\r\n        obj.projectID = data[\"project-id\"];\r\n        obj.categoryName = data[\"category-name\"];\r\n        obj.downloadURL = data[\"download-URL\"];\r\n        if (pBaseURL) {\r\n            if (!pBaseURL.endsWith(\"/\"))\r\n                pBaseURL += \"/\";\r\n            obj.teamworkFileURL = `${pBaseURL}${obj.endpointURI}`;\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n\r\n/*\r\n * {\r\n    \"file\": {\r\n        \"project-id\": \"999\",\r\n        \"uploaded-by-user-last-name\": \"User\",\r\n        \"name\": \"readme.txt\",\r\n        \"uploaded-date\": \"2014-03-28T16:29:45Z\",\r\n        \"uploaded-by-userId\": \"999\",\r\n        \"description\": \"\",\r\n        \"comments-count\": \"0\",\r\n        \"version-id\": \"32\",\r\n        \"private\": \"0\",\r\n        \"download-URL\": \"http://demo1company.teamwork.com/?action=viewFile&sd=35e756ad...\",\r\n        \"category-id\": \"13\",\r\n        \"project-name\": \"demo\",\r\n        \"version\": \"1\",\r\n        \"originalName\": \"readme.txt\",\r\n        \"id\": \"999\",\r\n        \"size\": \"1612\",\r\n        \"file-source\": \"teamworkpm\",\r\n        \"uploaded-by-user-first-name\": \"Demo\",\r\n        \"category-name\": \"Demo Category\"\r\n    },\r\n    \"STATUS\": \"OK\"\r\n}\r\n */","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {singleton} from \"aurelia-framework\";\r\nimport {HttpClient} from \"aurelia-fetch-client\";\r\n\r\n@singleton()\r\nexport class TWPMClientFactory {\r\n    \"use strict\";\r\n\r\n    private _baseURL: string = \"\";\r\n\r\n    constructor(private apiClient: HttpClient) {}\r\n\r\n    get baseURL (): string { return this._baseURL; }\r\n    set baseURL (value: string) { this._baseURL = value; }\r\n\r\n    createApiClient (pApiToken: string): HttpClient {\r\n        let base64Auth = this.getEncodedAuthString(pApiToken);\r\n        return this.apiClient.configure(config => {\r\n\r\n            if (this.baseURL)\r\n                config.withBaseUrl(this.baseURL);\r\n\r\n            config.withDefaults({\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"BASIC \" + base64Auth\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    private getEncodedAuthString (pApiToken: string) {\r\n        let authKey = `${pApiToken}:password`;\r\n        return btoa(authKey);\r\n    }\r\n}","import {autoinject, singleton} from \"aurelia-dependency-injection\";\r\nimport {Person} from \"../models/person\";\r\nimport {AuthUserInfo} from \"../models/auth-info\";\r\nimport {TWPMClientFactory} from \"./twpm-client-factory\";\r\n\r\n@singleton()\r\n@autoinject()\r\nexport class AuthState {\r\n    \"use strict\";\r\n\r\n    public apiToken: string = \"\";\r\n    public userInfo: AuthUserInfo;\r\n    private clientFactory: TWPMClientFactory;\r\n\r\n    constructor (pClientFactory: TWPMClientFactory) {\r\n        this.clientFactory = pClientFactory;\r\n    }\r\n\r\n    isAuthenticated (): boolean {\r\n        return this.userInfo != null;\r\n    }\r\n    \r\n    validateApiToken(pApiToken: string, pAuthUser: AuthUserInfo): void {\r\n        if (!this.isApiTokenValid(pApiToken))\r\n            throw new Error(\"Api token cannot be empty!\");\r\n        if (!pAuthUser || !pAuthUser.installURL)\r\n            throw new Error(\"A valid AuthUserInfo object with a valid installURL must be provided!\");\r\n        \r\n        this.apiToken = pApiToken;\r\n        this.userInfo = pAuthUser;\r\n        this.clientFactory.baseURL = pAuthUser.installURL;\r\n    }\r\n    \r\n    ensureAuthenticated (): void {\r\n        if (!this.isAuthenticated())\r\n            throw new Error(\"Not authenticated with TeamworkPM!\");\r\n    }\r\n\r\n    reset(): void {\r\n        if (!this.isAuthenticated())\r\n            return;\r\n\r\n        this.apiToken = \"\";\r\n        this.userInfo = null;\r\n        this.clientFactory.baseURL = \"\";\r\n    }\r\n\r\n    getInstallUrl () {\r\n        return this.userInfo.installURL;\r\n    }\r\n\r\n    private isApiTokenValid (pApiToken: string): boolean {\r\n        return pApiToken && pApiToken.trim().length >= 0;\r\n    }\r\n\r\n\r\n}","import {autoinject} from \"aurelia-framework\"\r\nimport {HttpClient} from \"aurelia-fetch-client\";\r\nimport {TWPMClientFactory} from \"./twpm-client-factory\";\r\nimport {AuthState} from \"./auth-state\";\r\nimport {AuthUserInfo} from \"../models/auth-info\"\r\nimport {Person} from \"../models/person\";\r\n\r\n@autoinject()\r\nexport class TWPMAuthService {\r\n    private clientFactory: TWPMClientFactory;\r\n    private httpClient: HttpClient;\r\n\r\n    constructor(pClientFactory: TWPMClientFactory, private authState: AuthState) {\r\n        this.clientFactory = pClientFactory;\r\n    }\r\n\r\n    public authenticate (pApiToken: string): Promise<any> {\r\n        this.httpClient = this.clientFactory.createApiClient(pApiToken);\r\n\r\n        return this.getAuthUserInfo()\r\n            .then(pAuthInfo => {\r\n                this.authState.validateApiToken(pApiToken, pAuthInfo);\r\n                return {\r\n                    Success: true,\r\n                    Account: pAuthInfo\r\n                };\r\n            }).catch(err => {\r\n                //encapsulate auth error and provide app-friendly error\r\n                return { Success: false, ErrorMessage: err.message, Error: err };\r\n            });\r\n    }\r\n\r\n    private getAuthUserInfo (): Promise<AuthUserInfo> {\r\n        return this.httpClient.fetch(\"https://authenticate.teamwork.com/authenticate.json\")\r\n            .then(pResponse => {\r\n                if (!pResponse.ok)\r\n                    throw new Error(\"Bad request to TeamworkPM.\");\r\n                let promiseData: any = pResponse.json();\r\n                return promiseData.then(pData => { return AuthUserInfo.parse(pData.account); });\r\n\r\n            }).catch(err => {\r\n                let translatedError: any;\r\n                switch (err.statusCode) {\r\n                case 401:\r\n                    translatedError = new Error(\"Invalid API Token!\");\r\n                    break;\r\n                default:\r\n                    translatedError = new Error(`Unspecified error - ${err.statusText}`);\r\n                    break;\r\n                }\r\n                return Promise.reject(translatedError);\r\n            });\r\n    }\r\n\r\n    endAuthSession () {\r\n        this.authState.reset();\r\n\r\n        console.log(\"Logged out and reset AuthState!\");\r\n    }\r\n}","import {autoinject, transient} from \"aurelia-framework\"\r\nimport {HttpClient} from \"aurelia-fetch-client\";\r\nimport {TWPMClientFactory as ApiClientFactory} from \"./twpm-client-factory\";\r\nimport {AuthState} from \"./auth-state\";\r\nimport {Project} from \"../models/project\";\r\nimport {Task} from \"../models/task\";\r\nimport {Person} from \"../models/person\";\r\nimport {TWFile} from \"../models/twfile\";\r\n\r\n@transient()\r\n@autoinject()\r\nexport class TWPMService {\r\n    apiClient: HttpClient;\r\n\r\n    constructor (pClientFactory: ApiClientFactory, private authState: AuthState) {\r\n        this.apiClient = pClientFactory.createApiClient(this.authState.apiToken);\r\n    }\r\n\r\n    async fetchPerson (pPersonID?: number): Promise<Person> {\r\n        let personID = pPersonID || this.authState.userInfo.userID;\r\n        return this.apiClient.fetch(`people/${personID}.json`)\r\n            .then(this.getJson).then(pData => {\r\n                return Person.parse(pData);\r\n            });\r\n    }\r\n\r\n    async fetchPeople (): Promise<Array<Person>> {\r\n        return this.apiClient.fetch(\"people.json\")\r\n            .then(this.getJson).then((pData: any) => {\r\n                let materializedPeople: Array<Person> = pData.people.map(pPersonRaw => Person.parse(pPersonRaw));\r\n                return materializedPeople;\r\n            });\r\n    }\r\n\r\n    async fetchAllProjects (): Promise<Array<Project>> {\r\n        return await this.apiClient.fetch(\"projects.json\").then(pResponse => {\r\n                if (pResponse.ok)\r\n                    return this.getJson(pResponse);\r\n\r\n                return Promise.reject(pResponse.error());\r\n            })\r\n            .then(pData => {\r\n                return pData.projects.map(pItem => Project.parse(pItem));\r\n            });\r\n    }\r\n\r\n    async fetchProjectByID (pProjectID: number): Promise<Project> {\r\n        let requestURL = `projects/${pProjectID}.json`;\r\n        return await this.apiClient.fetch(requestURL).then(this.getJson)\r\n            .then(pData => {\r\n                return Project.parse(pData.project);\r\n            });\r\n    }\r\n\r\n    async fetchTasks (pPartyID?: number): Promise<Array<Task>> {\r\n\r\n        let partyID = pPartyID || this.authState.userInfo.userID;\r\n        let requestURL = `tasks.json?responsible-party-ids=${partyID}&filter=today&sort=duedate`;\r\n        return await this.apiClient.fetch(requestURL)\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw new Error(\"Bad request from TeamworkPM.\");\r\n\r\n                return this.getJson(response).then((pData: any) => {\r\n                    let items: Array<any> = pData[\"todo-items\"];\r\n                    return items.map(pItem => new Task(pItem));\r\n                });\r\n            });\r\n    }\r\n\r\n    async fetchTasksByTag (pTags: Array<number>): Promise<Array<Task>> {\r\n\r\n        let requestURL = `tasks.json?tag-ids=${pTags.join(\",\")}&sort=duedate&includeCompletedTasks=true`;\r\n        return await this.apiClient.fetch(requestURL)\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw new Error(\"Bad request from TeamworkPM.\");\r\n\r\n                return this.getJson(response).then((pData: any) => {\r\n                    let items: Array<any> = pData[\"todo-items\"];\r\n                    return items.map(pItem => new Task(pItem));\r\n                });\r\n            });\r\n    }\r\n\r\n    async fetchTasksByProject (pProjectID: number): Promise<Array<Task>> {\r\n        let requestURL = `projects/${pProjectID}/tasks.json?includeCompletedTasks=true`;\r\n        return await this.apiClient.fetch(requestURL).then(this.getJson)\r\n            .then(pData => {\r\n                let rawTasks: Array<any> = pData[\"todo-items\"];\r\n                return rawTasks.map(pItem => new Task(pItem));\r\n            });\r\n    }\r\n\r\n    async fetchFilesByProject (pProjectID: number): Promise<Array<TWFile>> {\r\n        let requestURL = `projects/${pProjectID}/files.json`;\r\n        let installURL = this.authState.getInstallUrl();\r\n        return await this.apiClient.fetch(requestURL).then(this.getJson)\r\n            .then(pData => {\r\n                let rawFiles: Array<any> = pData.project.files;\r\n                return rawFiles.map(pItem => TWFile.parse(pItem, installURL));\r\n            });\r\n    }\r\n\r\n    private getJson (pResponse: Response): any {\r\n        return pResponse.json();\r\n    }\r\n\r\n\r\n}"],"sourceRoot":"../src"}